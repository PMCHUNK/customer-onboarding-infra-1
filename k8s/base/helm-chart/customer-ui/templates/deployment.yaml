apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { .Chart.Name } }
  namespace: { { .Values.namespace } }
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
      app: { { .Chart.Name } }
  template:
    metadata:
      labels:
        apps: { { .Chart.Name } }
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 3000
        runAsNonRoot: true
        fsGroup: 2000
      containers:
        - name: { { .Chart.Name } }
          iamge: { { .Chart.Name } }
          ports:
            - containerPort: { { .Values.containerPort } }
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              cpu: "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
            limits:
              cpu: "{{ .Values.resources.limits.cpu }}"
              memory: "{{ .Values.resources.limits.memory }}"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: pycache
              mountPath: /app/__pycache__
      volumes:
        - name: tmp
          emptyDir: {}
        - name: pycache
          emptyDir: {}
