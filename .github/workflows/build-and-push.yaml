name: Build and Deploy to AKS-1

on:
  push:
    paths:
      - "Docker/**/Dockerfile"
      - ".github/workflows/build-and-deploy.yaml"

env:
  ACR_NAME: customeronboardingacr
  IMAGE_TAG: v${{ github.run_number }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR Login using Azure CLI
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Build and push UI image
        run: |
          docker build -t $ACR_NAME.azurecr.io/customer-ui:${IMAGE_TAG} ./Docker/customer-ui
          docker push $ACR_NAME.azurecr.io/customer-ui:${IMAGE_TAG}

      - name: Build and push ingestion image
        run: |
          docker build -t $ACR_NAME.azurecr.io/customer-ingestion:${IMAGE_TAG} ./Docker/customer-ingestion
          docker push $ACR_NAME.azurecr.io/customer-ingestion:${IMAGE_TAG}

      - name: Build and push processor image
        run: |
          docker build -t $ACR_NAME.azurecr.io/customer-processor:${IMAGE_TAG} ./Docker/customer-processor
          docker push $ACR_NAME.azurecr.io/customer-processor:${IMAGE_TAG}

      - name: Install Kustomize CLI
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin

      - name: Update image tags in kustomization
        run: |
          cd k8s/overlays/prod
          kustomize edit set image customer-ui=${{ env.ACR_NAME }}.azurecr.io/customer-ui:${{ env.IMAGE_TAG }}
          kustomize edit set image customer-ingestion=${{ env.ACR_NAME }}.azurecr.io/customer-ingestion:${{ env.IMAGE_TAG }}
          kustomize edit set image customer-processor=${{ env.ACR_NAME }}.azurecr.io/customer-processor:${{ env.IMAGE_TAG }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Deploy to AKS
        run: |
          az aks get-credentials --resource-group customer-onboarding-rg --name customeronboarding-aks --overwrite-existing
          kubectl apply -k k8s/overlays/prod
